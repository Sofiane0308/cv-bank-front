[{"/mnt/d/cv-bank-front/src/index.js":"1","/mnt/d/cv-bank-front/src/App.js":"2","/mnt/d/cv-bank-front/src/reportWebVitals.js":"3"},{"size":500,"mtime":1607256591025,"results":"4","hashOfConfig":"5"},{"size":5050,"mtime":1607291260742,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1607256591045,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18q3vsh",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/d/cv-bank-front/src/index.js",[],"/mnt/d/cv-bank-front/src/App.js",["15"],"import './App.css';\nimport { Button, Card, Row, Form, Col, Tabs, Tab, Table, Alert } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nconst backendURL = \"http://localhost:8080/\";\n\n// 2 tabs for uploading and querying\nclass App extends Component {\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <Tabs defaultActiveKey=\"upload\" id=\"uncontrolled-tab-example\" >\n          <Tab eventKey=\"upload\" title=\"Upload\">\n            <Upload />\n          </Tab>\n          <Tab eventKey=\"query\" title=\"Query\">\n            <Query />\n          </Tab>\n        </Tabs>\n      </div>);\n  }\n\n}\n\n\n//The upload tab\nclass Upload extends Component {\n\n  state = {\n    selectedFiles: [],\n    loading: false,\n    uploadSuccess: null,\n  };\n\n  // On file select (from the pop up) \n  onFileChange = event => {\n    console.log(event.target.files);\n    // Update the state \n    this.setState({ selectedFiles: event.target.files, uploadSuccess: false });\n\n  };\n\n  // On file upload (click the upload button) \n  onFileUpload = () => {\n\n    // Create an object of formData \n    const formData = new FormData();\n\n    // Update the formData object\n\n    for (let i = 0; i < this.state.selectedFiles.length; i++) {\n      formData.append(\n        \"files\",\n        this.state.selectedFiles[i],\n        this.state.selectedFiles[i].name\n      );\n    }\n\n\n    // Request made to the backend api \n    // Send formData object \n    let config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      }\n    }\n\n    this.setState({ loading: true});\n\n    var self = this;\n    axios.post(backendURL, formData, config)\n      .then(function (response) {\n        self.setState({ uploadSuccess: true, loading:false });\n      })\n      .catch(function (error) {\n        console.log(error);\n        self.setState({ uploadSuccess: false, loading:false });\n      });\n  };\n\n  render() {\n\n    let label;\n    if (this.state.selectedFiles.length) { label = \"CV(s) selected click on the Upload button!\" } else { label = \"Select CV(s) to upload\" }\n\n    let uploadAlert;\n    if (this.state.uploadSuccess) {\n      uploadAlert = <Alert variant=\"success\">\n        CV(s) uploaded successfully !\n  </Alert>\n    }\n\n    return <Card>\n      <Card.Body>\n        <Form.File\n          id=\"upload-cv\"\n          label={label}\n          accept=\".docx,.pdf\"\n          onChange={this.onFileChange}\n          multiple\n          custom\n        />\n\n        <hr />\n        <Button disabled={this.state.loading}\n          onClick={!this.state.loading ? this.onFileUpload : null}>\n          \n          {this.state.loading ? 'Uploading...' : 'Upload'}\n        </Button>\n        <hr />\n        {uploadAlert}\n\n      </Card.Body>\n    </Card>;\n  }\n\n}\n\n\n//The query tab\nclass Query extends Component {\n\n  state = {\n    keyWords: [\"\"],\n    result: []\n  }\n\n  addKeyWord() {\n    this.setState({ keyWords: [...this.state.keyWords, \"\"] });\n  }\n\n\n  handleChange(e, index) {\n    this.state.keyWords[index] = e.target.value;\n    this.setState({ keyWords: this.state.keyWords })\n  }\n\n  handleRemove(index) {\n    this.state.keyWords.splice(index, 1);\n    this.setState({ keyWords: this.state.keyWords })\n  }\n\n  handleSubmit(e) {\n    var self = this;\n    axios.get(backendURL + \"findByBody/\", {\n      params: {\n        body: this.state.keyWords.toString()\n      }\n    })\n      .then(function (response) {\n        self.setState({ result: response.data });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n\n\n\n  render() {\n\n    let resultView;\n    if (this.state.result.length) resultView = <Card>\n      <Card.Body>\n        <Card.Title>\n          Matching CVs\n        </Card.Title>\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>CV</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.result.map((article, index) => <tr><td>{index}</td>  <td> {article} </td></tr>)}\n          </tbody>\n        </Table>\n      </Card.Body>\n    </Card>\n\n    return <Card>\n      <Card.Body>\n        <Card.Title>\n          Key words {'  '}\n          <Button variant=\"success\" onClick={(e) => this.addKeyWord(e)}> +  </Button>\n        </Card.Title>\n\n\n        {\n          this.state.keyWords.map((keyWord, index) => {\n            return (\n              <Form.Group as={Row} >\n                <Form.Label column sm=\"2\">\n                  Key word:\n                </Form.Label>\n                <Col sm=\"2\">\n                  <Form.Control type=\"text\" value={keyWord} onChange={(e) => this.handleChange(e, index)} />\n                </Col>\n\n                <Button variant=\"danger\" onClick={() => this.handleRemove(index)}> -  </Button>\n\n              </Form.Group>)\n          })\n        }\n\n        <hr />\n\n        <Button onClick={(e) => this.handleSubmit(e)}> Submit  </Button>\n        <hr />\n        {resultView}\n\n\n      </Card.Body>\n    </Card>\n      ;\n  }\n}\n\nexport default App;\n","/mnt/d/cv-bank-front/src/reportWebVitals.js",[],{"ruleId":"16","severity":1,"message":"17","line":139,"column":5,"nodeType":"18","endLine":139,"endColumn":24},"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression"]